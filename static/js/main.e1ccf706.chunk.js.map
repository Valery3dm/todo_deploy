{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/item-status-filter.js","components/item-status-filter/index.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","filterButtons","name","ItemStatusFilter","filter","onFilterChange","buttons","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"kTAEeA,G,MCCG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACxB,OACE,sBAAKC,UAAU,oBAAf,UACE,2CACA,+BAAKF,EAAL,gBAAwBC,EAAxB,gBCLSE,G,kNCIbC,MAAQ,CACNC,KAAM,I,EAGRC,eAAiB,SAACC,GAChB,IAAMF,EAAOE,EAAEC,OAAOC,MACtB,EAAKC,SAAS,CAAEL,SAChB,EAAKM,MAAML,eAAeD,I,uDAI1B,OACE,uBAAOO,KAAK,OACFV,UAAU,4BACVW,YAAY,iBACZJ,MAAOK,KAAKV,MAAMC,KAClBU,SAAUD,KAAKR,qB,GAlBUU,c,QCF1BC,G,6KCwBH,IAAD,EAIcH,KAAKH,MAHlBO,EADD,EACCA,MAAOC,EADR,EACQA,UACbC,EAFK,EAELA,kBACAC,EAHK,EAGLA,aAIEC,EAAa,iBASjB,OAhBO,EAILrB,OAKAqB,GAAc,SATT,EAICC,YASND,GAAc,cAId,uBAAMpB,UAAWoB,EAAjB,UACE,sBACEpB,UAAU,uBACVsB,QAASH,EAFX,SAGGH,IAGH,wBACEN,KAAK,SACLV,UAAU,6CACVsB,QAASJ,EAHX,SAIE,mBAAGlB,UAAU,wBAGf,wBACEU,KAAK,SACLV,UAAU,4CACVsB,QAASL,EAHX,SAKE,mBAAGjB,UAAU,2B,GA1DmBc,cCF3BS,G,MCGE,SAAC,GAEoB,IAFlBC,EAEiB,EAFjBA,MAAOP,EAEU,EAFVA,UACRC,EACkB,EADlBA,kBACAC,EAAkB,EAAlBA,aAEXM,EAAWD,EAAME,KAAI,SAACC,GAAU,IAC5BC,EAAqBD,EAArBC,GAAOC,EADoB,YACNF,EADM,QAGnC,OACE,oBAAa3B,UAAU,kBAAvB,SACE,cAAC,EAAD,2BACI6B,GADJ,IAECZ,UAAW,kBAAMA,EAAUW,IAC3BV,kBAAoB,kBAAMA,EAAkBU,IAC5CT,aAAe,kBAAMA,EAAaS,QAL5BA,MAWb,OACE,oBAAI5B,UAAU,uBAAd,SACIyB,MCxBFK,EAAgB,CACpB,CAAEC,KAAM,MAAOf,MAAO,OACtB,CAAEe,KAAM,SAAUf,MAAO,UACzB,CAAEe,KAAM,OAAQf,MAAO,SCHVgB,EDMU,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eAE5BC,EAAUL,EAAcJ,KAAI,YAAoB,IAAlBK,EAAiB,EAAjBA,KAAMf,EAAW,EAAXA,MAElCI,EAAa,QADFW,IAASE,EACc,WAAa,yBAErD,OACE,wBACQvB,KAAK,SACLY,QAAS,kBAAMY,EAAeH,IAC9B/B,UAAWoB,EAHnB,SAGgCJ,GAHnBe,MAOjB,OACE,qBAAK/B,UAAU,YAAf,SACImC,KEtBOC,G,kNCIXlC,MAAQ,CACJc,MAAO,I,EAGXqB,cAAgB,SAAChC,GACb,EAAKG,SAAS,CACVQ,MAAOX,EAAEC,OAAOC,S,EAIxB+B,SAAW,SAACjC,GACRA,EAAEkC,iBACF,EAAK9B,MAAM+B,YAAY,EAAKtC,MAAMc,OAClC,EAAKR,SAAS,CACVQ,MAAO,M,uDAIX,OACI,uBAAMhB,UAAU,uBAChBsC,SAAU1B,KAAK0B,SADf,UAEI,uBAAO5B,KAAK,OACJV,UAAU,cACVa,SAAUD,KAAKyB,cACf1B,YAAY,wBACZJ,MAAOK,KAAKV,MAAMc,QAC1B,wBAAQhB,UAAU,4BAAlB,6B,GA5ByBc,cCF1B2B,G,kNCUbC,MAAQ,I,EAERxC,MAAQ,CACNyC,SAAU,CACR,EAAKC,eAAe,gBACpB,EAAKA,eAAe,oBACpB,EAAKA,eAAe,iBAEtBzC,KAAM,GACN8B,OAAQ,O,EAYVY,WAAa,SAACjB,GACZ,EAAKpB,UAAS,YAAmB,IAAhBmC,EAAe,EAAfA,SACTG,EAAMH,EAASI,WAAU,SAACC,GAAD,OAAQA,EAAGpB,KAAOA,KAGjD,MAAO,CACLe,SAHY,sBAAOA,EAASM,MAAM,EAAEH,IAAxB,YAAiCH,EAASM,MAAMH,EAAM,U,EAQxEI,QAAU,SAACC,GACT,IAAMC,EAAU,EAAKR,eAAeO,GAEpC,EAAK3C,UAAS,YAAmB,IAAhBmC,EAAe,EAAfA,SAOf,MAAO,CACLA,SANU,sBACPA,GADO,CAEVS,S,EASNC,eAAiB,SAACC,EAAK1B,EAAI2B,GACvB,IAAMT,EAAMQ,EAAIP,WAAU,SAACC,GAAD,OAAQA,EAAGpB,KAAOA,KAGtC4B,EAAUF,EAAIR,GACdM,EAAO,2BAAQI,GAAR,kBACVD,GAAYC,EAAQD,KAGvB,MAAM,GAAN,mBACKD,EAAIL,MAAM,EAAEH,IADjB,CAEEM,GAFF,YAGKE,EAAIL,MAAMH,EAAM,M,EAIzB3B,aAAe,SAACS,GACd,EAAKpB,UAAS,YAAmB,IAAhBmC,EAAe,EAAfA,SACf,MAAO,CACLA,SAAW,EAAKU,eAAeV,EAAUf,EAAI,a,EAKnDV,kBAAoB,SAACU,GACnB,EAAKpB,UAAS,YAAmB,IAAhBmC,EAAe,EAAfA,SACf,MAAO,CACLA,SAAW,EAAKU,eAAeV,EAAUf,EAAI,kB,EAKnDxB,eAAiB,SAACD,GAChB,EAAKK,SAAS,CAACL,U,EAEjB+B,eAAiB,SAACD,GAChB,EAAKzB,SAAS,CAAEyB,Y,6DAxEHjB,GACb,MAAO,CACLA,QACAK,WAAW,EACXtB,MAAM,EACN6B,GAAIhB,KAAK8B,W,6BAsELe,EAAOtD,GACb,OAAoB,IAAhBA,EAAKuD,OACAD,EAEFA,EAAMxB,QAAO,SAACN,GACnB,OAAOA,EAAKX,MACL2C,cACAC,QAAQzD,EAAKwD,gBAAkB,O,6BAIlCF,EAAOxB,GACb,OAAOA,GACL,IAAK,MACH,OAAOwB,EACT,IAAK,SACH,OAAOA,EAAMxB,QAAO,SAACN,GAAD,OAAWA,EAAK5B,QACtC,IAAK,OACH,OAAO0D,EAAMxB,QAAO,SAACN,GAAD,OAAUA,EAAK5B,QACrC,QACE,OAAO0D,K,+BAIH,IAAD,EAE2B7C,KAAKV,MAA/ByC,EAFD,EAECA,SAASxC,EAFV,EAEUA,KAAO8B,EAFjB,EAEiBA,OAElB4B,EAAejD,KAAKqB,OAAOrB,KAAKkD,OAAOnB,EAAUxC,GAAO8B,GAGxD8B,EAAYpB,EAASV,QAAO,SAACe,GAAD,OAAQA,EAAGjD,QAAM2D,OAE7CM,EAAYrB,EAASe,OAASK,EAEpC,OACE,sBAAK/D,UAAU,WAAf,UACE,cAAC,EAAD,CAAWF,KAAMkE,EAAWjE,KAAMgE,IAClC,sBAAK/D,UAAU,mBAAf,UACE,cAAC,EAAD,CAAaI,eAAgBQ,KAAKR,iBAClC,cAAC,EAAD,CAAkB6B,OAAQA,EAC1BC,eAAgBtB,KAAKsB,oBAGvB,cAAC,EAAD,CACEV,MAAOqC,EACP5C,UAAWL,KAAKiC,WAChB3B,kBAAmBN,KAAKM,kBACxBC,aAAcP,KAAKO,eAEnB,cAAC,EAAD,CAAaqB,YAAe5B,KAAKsC,iB,GA3IVpC,cCLjCmD,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,W","file":"static/js/main.e1ccf706.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;\r\n","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n  \r\n  state = {\r\n    term: ''\r\n  }\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({ term });\r\n    this.props.onSearchChange(term);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <input type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"type to search\" \r\n                value={this.state.term}\r\n                onChange={this.onSearchChange}/>\r\n    );\r\n  };\r\n};\r\n\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;\r\n","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n/*   state = {\r\n    done: false,\r\n    important: false\r\n  }; */\r\n\r\n/*   onLabelClick = () => {\r\n    this.setState(({done}) => {\r\n      return {\r\n        done: !done\r\n      }\r\n    });\r\n  }; */\r\n\r\n  /* onMarkImportant = () => {\r\n    this.setState(({important}) => { // Деструктурируем state и достаём important\r\n      return {\r\n        important: !important\r\n      };\r\n    });\r\n  }; */\r\n\r\n  render() {\r\n    const { label, onDeleted,\r\n      onToggleImportant,\r\n      onToggleDone,\r\n      done, important} = this.props;\r\n   /*  const { done, important} = this.state; */\r\n\r\n    let classNames = 'todo-list-item';\r\n    if(done){\r\n      classNames += ' done';\r\n    }\r\n\r\n    if(important){\r\n      classNames += ' important'\r\n    }\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm float-right\"\r\n          onClick={onToggleImportant}>\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm float-right\"\r\n          onClick={onDeleted}\r\n        >\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted,\r\n                   onToggleImportant,\r\n                   onToggleDone}) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n        {...itemProps }\r\n         onDeleted={() => onDeleted(id)} \r\n         onToggleImportant ={() => onToggleImportant(id)}\r\n         onToggleDone ={() => onToggleDone(id)}/>\r\n         \r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      { elements }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nconst filterButtons = [\r\n  { name: 'all', label: 'All' },\r\n  { name: 'active', label: 'Active' },\r\n  { name: 'done', label: 'Done' }\r\n];\r\n\r\nconst ItemStatusFilter = ({ filter, onFilterChange }) => {\r\n\r\n  const buttons = filterButtons.map(({name, label}) => {\r\n    const isActive = name === filter;\r\n    const classNames = 'btn ' + (isActive ? 'btn-info' : 'btn-outline-secondary');\r\n\r\n    return (\r\n      <button key={name}\r\n              type=\"button\"\r\n              onClick={() => onFilterChange(name)}\r\n              className={classNames}>{label}</button>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"btn-group\">\r\n      { buttons }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemStatusFilter;\r\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;\r\n","import React, { Component } from 'react'\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n    render () {\r\n        return (\r\n            <form className='item-add-form d-flex'\r\n            onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                        className=\"form-change\"\r\n                        onChange={this.onLabelChange}\r\n                        placeholder=\"What needs to be done\"\r\n                        value={this.state.label}/>\r\n                <button className=\"btn btn-outline-secondary\">\r\n                    Add item\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n} ","import App from './app';\r\n\r\nexport default App;\r\n","import React, { Component }from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form'\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem(\"Drink Coffee\"),\r\n      this.createTodoItem(\"Make Awesome App\"),\r\n      this.createTodoItem(\"Have a lunch\")\r\n    ],\r\n    term: '',\r\n    filter: 'all' // active, all ,done\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n      const newArray = [...todoData.slice(0,idx), ...todoData.slice(idx + 1)]\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n\r\n      const newArr = [\r\n        ...todoData,\r\n        newItem\r\n      ]\r\n      \r\n      return {\r\n        todoData: newArr\r\n      }\r\n    })\r\n  };\r\n\r\n  toggleProperty = (arr, id, propName) => {\r\n      const idx = arr.findIndex((el) => el.id === id);\r\n\r\n      // 1.update object\r\n      const oldItem = arr[idx];\r\n      const newItem = { ...oldItem, \r\n        [propName]: !oldItem[propName]};\r\n\r\n      // 2.construct new array\r\n      return [\r\n        ...arr.slice(0,idx),\r\n        newItem,\r\n        ...arr.slice(idx + 1)\r\n      ];\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData : this.toggleProperty(todoData, id, 'done')\r\n      }\r\n    });\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData : this.toggleProperty(todoData, id, 'important')\r\n      }\r\n    });  \r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({term});\r\n  };\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  search (items, term) {\r\n    if (term.length === 0){\r\n      return items;\r\n    }\r\n    return items.filter((item) => {\r\n      return item.label\r\n            .toLowerCase()\r\n            .indexOf(term.toLowerCase()) > -1;\r\n    });\r\n  }\r\n\r\n  filter (items, filter) {\r\n    switch(filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { todoData,term , filter} = this.state;\r\n\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n\r\n    const doneCount = todoData.filter((el) => el.done).length;\r\n    \r\n    const todoCount = todoData.length - doneCount\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel onSearchChange={this.onSearchChange}/>\r\n          <ItemStatusFilter filter={filter}\r\n          onFilterChange={this.onFilterChange} />\r\n        </div>\r\n\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone}\r\n          />\r\n          <ItemAddForm onItemAdded = {this.addItem}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}